/*
 * CPC SISTEMAS
 */
package primeridea.gui;

import java.awt.event.ActionEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import primeridea.model.Carrito;
import primeridea.model.Electronico;
import primeridea.model.Producto;

/**
 *
 * @author gandhi.aguirre
 */
public class MenuInicial extends VentanaPersonalizada implements Carrito{
    private List<Producto> productosCarrito; 
    private List<Producto> productosInventario; 
    
    
    private MenuConsultaCarrito carritoVentana;
    private MenuCompra comprasVentana;
    /**
     * Creates new form MenuInicial
     */
    public MenuInicial(String titulo) {
        super(titulo);
        productosCarrito = new ArrayList<>();
        productosInventario = cargarCatalogoProductos();
        carritoVentana = new MenuConsultaCarrito(productosCarrito,calcularTotalCarrito(),this);
        comprasVentana = new MenuCompra(productosInventario,this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new java.awt.GridLayout(3, 1));

        jButton1.setText("Comprar productos");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);

        jButton2.setText("Ver carrito");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);

        jButton3.setText("Vaciar carrito");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        comprasVentana.setInventario(productosInventario);
        comprasVentana.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        verProductosDeCarrito();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        vaciarCarrito();
    }//GEN-LAST:event_jButton3ActionPerformed

    @Override
    public void actionPerformed(ActionEvent e) {
        switch(((JButton)e.getSource()).getName().split(",")[0]){
            case "A":
                if(JOptionPane.showConfirmDialog(null, "Desea comprar "+((JButton)e.getSource()).getName().split(",")[1] + "?")
                        == JOptionPane.YES_OPTION){
                    for(Producto productoInventario : productosInventario){
                        if(productoInventario.getNombre().equals(((JButton)e.getSource()).getName().split(",")[1])){
                            agregarAlCarrito(productoInventario);
                            break; 
                        }
                    }
                }
                break;
            case "D":
                if(JOptionPane.showConfirmDialog(null, "Desea eliminar "+((JButton)e.getSource()).getName().split(",")[1]+"?")
                        == JOptionPane.YES_OPTION){
                    for(Producto productoInventario : productosInventario){
                        if(productoInventario.getNombre().equals(((JButton)e.getSource()).getName().split(",")[1])){
                            eliminarDelCarrito(productoInventario);
                            break; 
                        }
                    }
                }
                break;
        }
    }

    @Override
    public void definirElementosPropios() {
        initComponents();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void agregarAlCarrito(Producto producto) {
        productosCarrito.add(producto);
        JOptionPane.showMessageDialog(null,"Producto agregado al carrito");
    }

    @Override
    public void eliminarDelCarrito(Producto producto) {
        if(productosCarrito.contains(producto)){
            productosCarrito.remove(producto);
            carritoVentana.dispose();
            JOptionPane.showMessageDialog(null,"Producto eliminado del carrito");
        }
        else
            JOptionPane.showMessageDialog(null,"El producto no esta en el carrito");
    }

    @Override
    public void vaciarCarrito() {
        if(JOptionPane.showConfirmDialog(null, "Esta seguro de eliminar todos los productos en el carrito?")
                == JOptionPane.YES_OPTION){
            productosCarrito.clear();
            JOptionPane.showMessageDialog(null,"Carrito vaciado");
        }
    }

    @Override
    public double calcularTotalCarrito() {
        double costoTotal = 0; 
        for(Producto producto : productosCarrito){
            costoTotal += producto.getCosto();
        }
        return costoTotal; 
    }

    private List<Producto> cargarCatalogoProductos() {
        ArrayList<Producto> productos = new ArrayList<>();
            productos.add(new Producto("Leche",20));
            productos.add(new Producto("Cereal",30));
            productos.add(new Electronico("Nokia",350,90));
        return productos; 
    }

    @Override
    public void verProductosDeCarrito() {
        if(!productosCarrito.isEmpty()){
            carritoVentana.setProductos(productosCarrito,calcularTotalCarrito());
            carritoVentana.setVisible(true);
        }else{
            JOptionPane.showMessageDialog(null,"No hay elementos en el carrito");
        }
    }
}
